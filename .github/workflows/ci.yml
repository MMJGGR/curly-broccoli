name: CI
on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install frontend deps
        run: |
          cd frontend && npm install
      - name: ESLint
        run: |
          cd frontend && npx eslint . || true
      - name: Install api deps
        run: |
          cd api && pip install -r requirements.txt
      - name: Flake8
        run: |
          cd api && flake8 . || true
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install deps
        run: |
          cd frontend && npm install
          cd ../api && pip install -r requirements.txt
      - name: Run tests
        run: |
          cd api && pytest --cov=app --cov-fail-under=90
          cd ../frontend && npm test -- --coverage --watchAll=false && npx jest --coverage --maxWorkers=2
      - name: Login to GHCR
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build and push API image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/api:latest ./api
          docker push ghcr.io/${{ github.repository }}/api:latest
      - name: Build and push Frontend image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/frontend:latest ./frontend
          docker push ghcr.io/${{ github.repository }}/frontend:latest
