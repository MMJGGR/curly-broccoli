name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:15
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: finance_app
        options: >-
          --health-cmd "pg_isready -U user"
          --health-interval 10s --health-retries 5

    steps:
      - uses: actions/checkout@v3

      # Python tests
      - name: Setup Python
        uses: actions/setup-python@v4
        with: python-version: '3.11'
      - name: Install API deps
        run: |
          pip install --upgrade pip setuptools wheel
          pip install -r api/requirements.txt
      - name: Run API tests
        run: |
          pytest --cov=app --cov=compute --cov-report=xml
      - name: Enforce API coverage
        run: |
          coverage report --fail-under=90

      # Node.js tests
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with: node-version: '18'
      - name: Install Frontend deps
        run: |
          cd frontend
          npm ci
      - name: Run Frontend tests
        run: |
          cd frontend
          npm test -- --coverage

      # Docker build
      - name: Build API image
        run: docker build -t finance-api:ci -f api/Dockerfile api
      - name: Build Frontend image
        run: docker build -t finance-frontend:ci -f frontend/Dockerfile frontend
  e2e:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          pip install -r api/requirements.txt
          npm install
      - name: Install tools
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Start stack
        run: docker-compose up -d --build
      - name: Wait for API
        run: |
          timeout 60s bash -c 'until curl -fs http://localhost:8000/healthz; do sleep 5; done'
      - name: Health check
        run: curl -f http://localhost:8000/healthz | jq .
      - name: Registration
        run: |
          curl -f -X POST http://localhost:8000/auth/register \
            -H "Content-Type: application/json" \
            -d '{"email":"ci@example.com","password":"Passw0rd!","dob":"1990-01-01","nationalId":"12345678","kra_pin":"A1B2C3","annual_income":50000,"dependents":0,"goals":{"targetAmount":10000,"timeHorizon":12},"questionnaire":[1,2,3]}' \
            | jq .
      - name: Cypress tests
        run: npm --prefix frontend run e2e
      - name: Shutdown
        run: docker-compose down
